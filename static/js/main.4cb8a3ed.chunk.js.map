{"version":3,"sources":["components/SearchBar.js","components/WeatherCard.js","components/Favorites.js","components/Recents.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","warning","handleChange","bind","assertThisInitialized","sendValueToParent","event","setState","target","preventDefault","trim","match","callBackFromParent","errorMessage","react_default","a","createElement","es","error","header","content","warningMessage","className","onSubmit","placeholder","action","icon","onChange","size","type","autoFocus","Component","WeatherCard","saveDataToLocalStorage","deleteDataFromLocalStorage","existingCities","JSON","parse","localStorage","getItem","indexOfCity","indexOf","weatherData","city","splice","setItem","stringify","push","num","Math","floor","_this$props$weatherDa","weather","country","temp","wind","windDirection","celcius","round","km","windCompass","degToCompass","saveBtn","onClick","deleteBtn","negative","savedCities","concat","id","main","includes","Favorites","getWeather","_this2","cityElements","map","key","Recents","recentCities","App","searchDone","hasSavedCities","hasRecentCities","callWeatherData","updateSavedCities","updateRecentCities","url","fetch","then","response","ok","Error","statusText","resp","json","data","console","log","weatherObj","name","sys","speed","deg","catch","message","cityArr","hasCities","length","recentCity","existingRecentCities","_this$state","components_SearchBar","components_WeatherCard","components_Favorites","components_Recents","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4cb8a3ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/SearchBar.css\";\nimport { Input, Message, Form } from \"semantic-ui-react\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      warning: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.sendValueToParent = this.sendValueToParent.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  sendValueToParent(event) {\n    event.preventDefault();\n    // Check if the input field has been submitted empty or if it contains numbers\n    if (this.state.value.trim() === \"\" || this.state.value.match(/\\d+/g) !== null) {\n      this.setState({ warning: true });\n    } else {\n      this.props.callBackFromParent(this.state.value);\n      this.setState({ warning: false });\n    }\n  }\n\n  render() {\n    const errorMessage = (\n      <Message error header=\"There was an error\" content={this.props.error} />\n    );\n    const warningMessage = (\n      <Message warning header=\"Please check that you've entered a valid city\" />\n    );\n\n    return (\n      <div className=\"SearchBar\">\n        {this.props.error && errorMessage}\n        {this.state.warning && warningMessage}\n        <Form onSubmit={this.sendValueToParent}>\n          <Input\n            className=\"SearchBar-input\"\n            placeholder=\"Search the weather in...\"\n            action={{ icon: \"search\" }}\n            onChange={this.handleChange}\n            value={this.state.value}\n            size=\"huge\"\n            type=\"text\"\n            autoFocus\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport \"../css/WeatherCard.css\";\nimport \"../css/weather-icons.min.css\";\nimport { Button } from \"semantic-ui-react\";\n\nclass WeatherCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveDataToLocalStorage = this.saveDataToLocalStorage.bind(this);\n    this.deleteDataFromLocalStorage = this.deleteDataFromLocalStorage.bind(this);\n  }\n\n  deleteDataFromLocalStorage() {\n    const existingCities = JSON.parse(localStorage.getItem(\"cityList\"));\n    const indexOfCity = existingCities.indexOf(this.props.weatherData.city);\n\n    existingCities.splice(indexOfCity, 1);\n    localStorage.setItem(\"cityList\", JSON.stringify(existingCities));\n    this.props.callBackFromParent(existingCities);\n  }\n\n  saveDataToLocalStorage() {\n    // Get data from LocalStorage if there is any and push back with new city\n    const existingCities = JSON.parse(localStorage.getItem(\"cityList\")) || [];\n    existingCities.push(this.props.weatherData.city);\n    localStorage.setItem(\"cityList\", JSON.stringify(existingCities));\n    this.props.callBackFromParent(existingCities);\n  }\n\n  degToCompass(num) {\n    let val = Math.floor((num / 22.5) + 0.5);\n    let arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\n    return arr[(val % 16)];\n  }\n\n  render() {\n    const { city, weather, country, temp, wind, windDirection } = this.props.weatherData;\n    const celcius = Math.round(temp - 273.15);\n    const km = Math.round(wind* 1.609);\n\n    const windCompass = this.degToCompass(windDirection);\n\n\n    const saveBtn = (\n      <Button\n        className={\"green-btn\"}\n        size=\"mini\"\n        onClick={this.saveDataToLocalStorage}\n        content=\"Save to favorites\"\n      />\n    );\n    const deleteBtn = (\n      <Button\n        negative\n        size=\"mini\"\n        onClick={this.deleteDataFromLocalStorage}\n        content=\"Delete from favorites\"\n      />\n    );\n    const existingCities = this.props.savedCities;\n\n    return (\n      <div className=\"WeatherCard\">\n        <h1 className=\"WeatherCard-degrees\">{celcius}°</h1>\n        <p>{km} kph {windCompass}</p>\n        <div className=\"WeatherCard-icon-container\">\n          <i className={`wi wi-owm-${weather[0].id} WeatherCard-icon`} />\n          <p>{weather[0].main}</p>\n        </div>\n        <h2 className=\"WeatherCard-city\">\n          {city}, {country}\n        </h2>\n        {existingCities.includes(city) ? deleteBtn : saveBtn}\n      </div>\n    );\n  }\n}\n\nexport default WeatherCard;\n","import React, {Component} from \"react\";\nimport \"../css/Favorites.css\";\nimport {Button} from \"semantic-ui-react\";\n\nclass Favorites extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n    getWeather(event) {\n        this.props.callBackFromParent(event.target.value);\n    }\n\n    render() {\n        let cityElements = this.props.savedCities.map((city) => {\n            return <Button className=\"Favorites-btn\" size=\"tiny\" value={city} key={`${city}-button`} onClick={this.getWeather} content={city}/>;\n        });\n\n        return (\n            <div className=\"Favorites\">\n                <h3 className=\"Favorites-title\">My favorite cities</h3>\n                <div className=\"Favorites-button-container\">\n                    {cityElements}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Favorites;\n","import React, {Component} from \"react\";\nimport \"../css/Recents.css\";\nimport {Button} from \"semantic-ui-react\";\n\nclass Recents extends Component {\n    constructor(props) {\n        super(props);\n        this.getWeather = this.getWeather.bind(this);\n    }\n\n    getWeather(event) {\n        this.props.callBackFromParent(event.target.value);\n    }\n\n    render() {\n        let cityElements = this.props.recentCities.map((city) => {\n            return <Button className=\"Favorites-btn\" size=\"tiny\" value={city} key={`${city}-button`} onClick={this.getWeather} content={city}/>;\n        });\n\n        return (\n            <div className=\"Recents\">\n                <h4 className=\"Recents-title\">Recent searches</h4>\n                <div className=\"Recents-button-container\">\n                    {cityElements}\n                    {/*<Button className=\"Favorites-btn\" size=\"tiny\" value={'Clear'} key={`{'Clear'}-button`} onClick={this.getWeather} content={'Clear'}/>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Recents;\n","import React, { Component } from \"react\";\nimport \"./css/App.css\";\n\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport Favorites from \"./components/Favorites\";\nimport Recents from \"./components/Recents\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: {\n        weather: \"\",\n        city: \"\",\n        country: \"\",\n        temp: 0,\n        wind: 0,\n        windDirection: \"\"\n      },\n      searchDone: false,\n      recentCities: [],\n      savedCities: [],\n      hasSavedCities: false,\n      hasRecentCities: false,\n      errorMessage: \"\"\n    };\n\n    this.callWeatherData = this.callWeatherData.bind(this);\n    this.updateSavedCities = this.updateSavedCities.bind(this);\n    this.updateRecentCities = this.updateRecentCities.bind(this);\n  }\n\n  callWeatherData(city) {\n\n    //get city weather\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=570a39dcca7a0510c9f57e364bf0fe50`;\n\n    // const url = `https://api.openweathermap.org/data/2.5/forecast?q=wellington,nz&mode=xml&APPID=570a39dcca7a0510c9f57e364bf0fe50`;\n\n    fetch(url)\n      .then(handleErrors)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        const weatherObj = {\n          weather: data.weather,\n          city: data.name,\n          country: data.sys.country,\n          temp: data.main.temp,\n          wind: data.wind.speed,\n          windDirection: data.wind.deg\n        };\n        this.setState({\n          weatherData: weatherObj,\n          searchDone: true,\n          errorMessage: \"\"\n        });\n        //save city to recent cities list\n        this.updateRecentCities(data.name);\n\n      })\n      .catch(error => {\n        // If an error is catch, it's sent to SearchBar as props\n        this.setState({ errorMessage: error.message });\n      });\n\n    function handleErrors(response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }\n\n  }\n\n  updateSavedCities(cityArr) {\n    // hasCities is set to true if length is more than 0, otherwise false\n    const hasCities = cityArr.length > 0;\n    this.setState({ savedCities: cityArr, hasSavedCities: hasCities });\n  }\n\n  updateRecentCities(recentCity) {\n\n     if (this.state.recentCities.includes(recentCity)) {\n       return false;\n     } else {\n       this.setState({recentCities: this.state.recentCities.concat([recentCity])});\n       this.setState({hasRecentCities: true});\n     }\n\n    let existingCities = this.state.recentCities;\n    localStorage.setItem(\"recentList\", JSON.stringify(existingCities));\n  }\n\n  componentWillMount() {\n    // See if there's saved/recent cities in localStorage before the App is mounted\n    let existingCities = JSON.parse(localStorage.getItem(\"cityList\") || \"[]\");\n\n    if (existingCities.length !== 0) {\n      this.setState({\n        hasSavedCities: true,\n        savedCities: existingCities\n      });\n      // Set the first favourite on display\n      this.callWeatherData(existingCities[0]);\n    }\n\n    let existingRecentCities = JSON.parse(localStorage.getItem(\"recentList\") || \"[]\");\n\n    if (existingRecentCities.length !== 0) {\n      this.setState({\n        hasRecentCities: true,\n        recentCities: existingRecentCities\n      });\n    }\n  }\n\n\n\n  render() {\n    const {\n      searchDone,\n      weatherData,\n      hasSavedCities,\n      savedCities,\n      errorMessage,\n      recentCities,\n      hasRecentCities,\n    } = this.state;\n    \n    return (\n      <div className=\"App\">\n        <SearchBar\n          callBackFromParent={this.callWeatherData}\n          error={errorMessage}\n        />\n        {searchDone && (\n          <WeatherCard\n            weatherData={weatherData}\n            savedCities={savedCities}\n            callBackFromParent={this.updateSavedCities}\n          />\n        )}\n        {hasSavedCities && (\n          <Favorites\n            savedCities={savedCities}\n            callBackFromParent={this.callWeatherData}\n          />\n        )}\n        {hasRecentCities && (\n            <Recents\n                recentCities={recentCities}\n                callBackFromParent={this.callWeatherData}\n            />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}